name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Deploy to EC2
      run: |
           # Save the private key to a file
           echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
           chmod 600 id_rsa

           # Add the remote server to known hosts to prevent interactive confirmation
           ssh-keyscan -H ${{ secrets.hostip }} >> ~/.ssh/known_hosts

           # Execute commands on the EC2 instance
           ssh -i id_rsa ubuntu@${{ secrets.hostip }} << 'EOF'
             sudo apt update && sudo apt install nginx -y
             sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
             curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
             sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
             apt-cache policy docker-ce
             sudo apt install docker-ce -y
             sudo docker run -d --name mytempcontainer2 nginx:latest
             sudo docker commit mytempcontainer2 mansukhsingh1/mynewimage:latest
             sudo docker login registry-1.docker.io -u mansukhsingh1
             sudo docker push mansukhsingh1/mynewimage:latest
           EOF


      
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3
  
    # - name: Build and push
    #   run: sudo docker push myusername/mynewimage:latest
